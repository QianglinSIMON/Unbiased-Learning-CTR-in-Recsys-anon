import pandas as pd

# 数据准备
data_pretrained = {
    'auc': (
        [0.692,0.693,0.693,0.691,0.691]
    ),
    'test_loss':(
    [0.723,0.729,0.721,0.725,0.730]
    ),
    'method': ['Pretrained'] * 5,
    'percentage': (
            ['0%'] * 5
    )
}

# 转换为数据框
df_pretrained = pd.DataFrame(data_pretrained)

# 数据准备
data_Nonpessi_tuning = {
    'auc': (
   [0.645,0.643,0.644,0.647,0.643]+
   [0.677,0.675,0.676,0.676,0.676]+
   [0.695,0.692,0.695,0.697,0.695]+
   [0.706,0.705,0.706,0.707,0.707]+
   [0.714,0.715,0.715,0.716,0.715]+
   [0.720,0.722,0.722,0.722,0.722]+
   [0.726,0.727,0.726,0.727,0.728]+
   [0.730,0.731,0.731,0.732,0.733]

    ),
    'test_loss':(
[0.995,0.978,1.016,1.041,0.970]+
[0.692,0.633,0.718,0.726,0.680]+
[0.581,0.562,0.574,0.593,0.576]+
[0.530,0.508,0.523,0.537,0.523]+
[0.499,0.490,0.504,0.508,0.499]+
[0.482,0.472,0.480,0.489,0.479]+
[0.471,0.464,0.467,0.474,0.468]+
[0.462,0.459,0.460, 0.464,0.449]
    ),
    "weights_est":(
  [0.001,0.001,0.001,0.001,0.001]+
  [0.001,0.001,0.001,0.001,0.001]+
  [0.001,0.001,0.001,0.001,0.001]+
  [0.001,0.002,0.001,0.001,0.001]+
  [0.001,0.001,0.001,0.001,0.002]+
  [0.001,0.001,0.001,0.001,0.002]+
  [0.001,0.001,0.002,0.001,0.001]+
  [0.001,0.001,0.002,0.001,0.002]
    ),
    'method': ['Loss_DC_Nonpessi'] * 40,
    'percentage': (
            ['5%'] * 5 +
            ['10%'] * 5 +
            ['15%'] * 5 +
            ['20%'] * 5 +
            ['25%'] * 5 +
            ['30%'] * 5 +
            ['35%'] * 5 +
            ['40%'] * 5
    )
}

# 转换为数据框
df_Nonpessi_tuning= pd.DataFrame(data_Nonpessi_tuning)

# 数据准备
data_Pessi_tuning = {
    'auc': (
   [0.645,0.642,0.644,0.647,0.643]+
   [0.677,0.675,0.677,0.678,0.676]+
   [0.695,0.693,0.695,0.696,0.696]+
   [0.705,0.706,0.706,0.707,0.707]+
   [0.714,0.715,0.715,0.716,0.717]+
   [0.720, 0.722, 0.721,0.722,0.723]+
   [0.725,0.728,0.726,0.727,0.729]+
   [0.730,0.730,0.731, 0.732, 0.732]
    ),
    'test_loss':(
   [1.002,0.988,1.020,1.047,0.983]+
   [0.703,0.670,0.688,0.700,0.681]+
   [0.584,0.563,0.578,0.616,0.568]+
   [0.533,0.511,0.525,0.540,0.523]+
   [0.501,0.493,0.506,0.508,0.499]+
   [0.482,0.474, 0.481,0.490, 0.480]+
   [0.471, 0.468,0.468,0.474,0.467]+
   [0.463,0.458,0.460, 0.465,0.449]
    ),
    "weights_est":(
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001, 0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001, 0.001, 0.002]
    ),
    'method': ['Loss_DC_Pessi'] * 40,
    'percentage': (
            ['5%'] * 5 +
            ['10%'] * 5 +
            ['15%'] * 5 +
            ['20%'] * 5 +
            ['25%'] * 5 +
            ['30%'] * 5 +
            ['35%'] * 5 +
            ['40%'] * 5
    )
}

# 转换为数据框
df_Pessi_tuning= pd.DataFrame(data_Pessi_tuning)



# 数据准备
data_CV_Search_tuning = {
       'auc': (
        [0.678,0.684,0.684,0.681,0.682] +
        [0.699,0.699,0.700,0.696,0.698] +
        [0.706,0.706,0.707,0.707,0.706]+
        [0.711,0.711,0.707,0.710,0.710]+
        [0.717,0.718,0.718,0.717,0.720]+
        [0.722,0.722,0.721,0.721,0.723]+
        [0.725,0.726,0.725,0.725,0.727]+
        [0.728,0.727,0.727,0.728,0.726]
    ),
    'test_loss':(
    [0.738,0.723,0.741,0.739,0.728]+
    [0.518,0.526,0.522,0.529,0.527]+
    [0.513,0.509,0.511,0.514,0.516]+
    [0.510,0.506,0.514,0.508,0.507]+
    [0.479,0.477,0.480,0.480,0.485]+
    [0.475,0.474,0.481,0.477,0.480]+
    [0.473,0.468,0.474,0.476,0.467]+
    [0.467,0.471,0.469,0.466,0.472]
    ),
    "weights_search": (
            [1,1,1,1,1] +
            [0.8,0.8,0.8,0.8,0.8]+
            [0.8,0.8,0.8,0.8,0.8]+
            [0.8, 0.8, 0.8, 0.8, 0.8]+
[0.6,0.6,0.6,0.6,0.6]+
[0.6,0.6,0.6,0.6,0.6]+
[0.6,0.6,0.6,0.6,0.6]+
[0.6,0.6,0.6,0.6,0.6]
    ),
    'method': ['CV_Search'] * 40,
    'percentage': (
            ['5%'] * 5 +
            ['10%'] * 5 +
            ['15%'] * 5 +
            ['20%'] * 5 +
            ['25%'] * 5 +
            ['30%'] * 5 +
            ['35%'] * 5 +
            ['40%'] * 5
    )
}

# 转换为数据框
data_CV_Search_tuning= pd.DataFrame(data_CV_Search_tuning)

# 数据准备
data_Only_tuning = {
          'auc': (
        [0.646,0.642,0.645,0.646,0.643] +
        [0.677,0.675,0.677,0.677,0.677] +
        [0.694,0.693,0.695,0.696,0.696] +
        [0.705,0.705,0.706,0.707,0.707] +
        [0.712,0.714,0.715,0.716,0.716] +
        [0.719,0.722,0.721,0.722,0.723] +
        [0.725,0.727,0.726,0.728,0.727] +
        [0.730,0.732,0.731,0.731,0.733]

    ),
    'test_loss':(
[0.988,0.978,1.021,1.053,1.000]+
[0.709,0.653,0.680,0.715,0.676] +
[0.578,0.569,0.579,0.609,0.571] +
[0.532,0.521,0.526,0.544,0.529] +
[0.502,0.492,0.501,0.508,0.494] +
[0.486,0.477,0.478,0.488,0.479] +
[0.472,0.462,0.469,0.475,0.465] +
[0.465,0.459,0.461,0.468,0.461]
    ),
    'method': ['Only_Tuning'] * 40,
    'percentage': (
            ['5%'] * 5 +
            ['10%'] * 5 +
            ['15%'] * 5 +
            ['20%'] * 5 +
            ['25%'] * 5 +
            ['30%'] * 5 +
            ['35%'] * 5 +
            ['40%'] * 5
    )
}

# 转换为数据框
df_Only_tuning= pd.DataFrame(data_Only_tuning)


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# 合并数据集
df_all = pd.concat([df_pretrained, df_Nonpessi_tuning, df_Pessi_tuning, data_CV_Search_tuning, df_Only_tuning])
df_all.to_csv("df_all_summary_DeepFM_Withoutfinetuning.csv", index=False)

