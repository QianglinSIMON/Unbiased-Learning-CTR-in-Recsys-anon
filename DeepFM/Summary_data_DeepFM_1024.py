import pandas as pd

# 数据准备
data_pretrained = {
    'auc': (
        [0.692,0.693,0.693,0.691,0.691]+
        [0.702,0.703,0.704,0.703,0.703] +
        [0.714,0.716,0.716,0.715,0.714] +
        [0.723,0.723,0.723,0.724,0.723] +
        [0.728,0.730,0.730,0.729,0.729] +
        [0.733,0.735,0.734,0.734,0.735]
    ),
    'test_loss':(
    [0.723,0.729,0.721,0.725,0.730]+
    [0.456,0.454,0.455,0.455,0.454]+
    [0.454,0.452,0.451,0.451,0.452]+
    [0.452,0.448,0.449,0.450,0.448]+
    [0.448,0.446,0.446,0.446,0.446]+
    [0.446,0.445,0.444,0.444,0.444]
    ),
    'method': ['Pretrained_Tuning'] * 30,
    'percentage': (
        ['0%'] * 5 +
        ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

# 转换为数据框
df_pretrained = pd.DataFrame(data_pretrained)

# 数据准备
data_Nonpessi_tuning = {
    'auc': (
   [0.705,0.705,0.706,0.706,0.705]+
   [0.716,0.717,0.717,0.716,0.716]+
   [0.724,0.724,0.724,0.724,0.724]+
   [0.729,0.731,0.730,0.730,0.730]+
   [0.734,0.736,0.736,0.735,0.735]
    ),
    'test_loss':(
[0.456,0.454,0.455,0.455,0.455]+
[0.454,0.452,0.451,0.451,0.451]+
[0.452,0.448,0.449,0.450,0.448]+
[0.448,0.446,0.446,0.446,0.446]+
[0.446,0.444,0.447,0.444,0.444]
    ),
    "weights_est":(
    [0.002,0.002,0.002,0.002,0.002]+
  [0.002,0.002,0.002,0.002,0.002]+
  [0.002,0.002,0.002,0.002,0.002]+
  [0.002,0.002,0.002,0.002,0.002]+
  [0.002,0.002,0.002,0.002,0.002]
    ),
    'method': ['Loss_DC_Nonpessi_Tuning'] * 25,
    'percentage': (
        ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

# 转换为数据框
df_Nonpessi_tuning= pd.DataFrame(data_Nonpessi_tuning)

# 数据准备
data_Pessi_tuning = {
    'auc': (
   [0.703,0.704,0.704,0.705,0.704]+
   [0.715,0.716,0.716,0.716,0.715]+
   [0.723,0.723,0.724,0.724,0.723]+
   [0.728,0.731,0.730,0.729,0.729]+
   [0.733,0.735,0.736,0.735,0.735]
    ),
    'test_loss':(
   [0.456,0.454,0.454,0.454,0.454]+
   [0.454,0.452,0.451,0.451,0.451]+
   [0.452,0.448,0.449,0.450,0.448]+
   [0.448,0.446,0.446,0.446,0.446]+
   [0.446,0.444,0.447,0.444,0.444]
    ),
    "weights_est":(
   [0.001,0.001,0.001,0.001,0.001]+
   [0.002,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]+
   [0.001,0.001,0.001,0.001,0.001]
    ),
    'method': ['Loss_DC_Pessi_Tuning'] * 25,
    'percentage': (
         ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

# 转换为数据框
df_Pessi_tuning= pd.DataFrame(data_Pessi_tuning)

# 数据准备
data_Supervised_all = {
          'auc': (
        [0.701,0.702,0.702,0.701,0.701] +
        [0.703,0.704,0.705,0.704,0.704] +
        [0.706,0.707,0.705,0.706,0.706] +
        [0.708,0.708,0.709,0.708,0.708] +
        [0.710,0.710,0.709,0.711,0.710]
    ),
    'test_loss':(
    [0.640,0.633,0.625,0.654,0.631]+
    [0.605,0.581,0.584,0.589,0.588]+
    [0.565,0.559,0.558,0.573,0.560]+
    [0.546,0.550,0.537,0.546,0.544]+
    [0.519,0.531,0.537,0.538,0.528]
    ),
    'method': ['Supervised_All'] * 25,
    'percentage': (
         ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

df_Supervised_all= pd.DataFrame(data_Supervised_all)


# 数据准备
data_CV_Search_tuning = {
       'auc': (
        [0.702,0.704,0.704,0.702,0.703 ] +
        [0.708,0.708,0.708,0.707,0.707] +
        [0.715,0.716,0.715,0.714,0.715] +
        [0.718,0.720,0.720,0.719,0.718] +
        [0.726,0.727,0.728,0.727,0.727]
    ),
    'test_loss':(
    [0.560,0.554,0.552,0.556,0.554]+
    [0.522,0.527,0.532,0.533,0.529]+
    [0.483,0.483,0.484,0.483,0.483]+
    [0.478,0.477,0.479,0.476,0.479]+
    [0.460,0.459,0.460,0.461,0.459]
    ),
    "weights_search": (
            [0.8,0.8,0.8,0.8,0.8] +
            [0.8, 0.8, 0.8, 0.8, 0.8] +
            [0.6, 0.6, 0.6, 0.6, 0.6] +
            [0.6, 0.6, 0.6, 0.6, 0.6]+
            [0.4, 0.4, 0.4, 0.4, 0.4]
    ),
    'method': ['CV_Search_Tuning'] * 25,
    'percentage': (
         ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

# 转换为数据框
data_CV_Search_tuning= pd.DataFrame(data_CV_Search_tuning)

# 数据准备
data_Only_tuning = {
          'auc': (
        [0.646,0.642,0.645,0.646,0.643] +
        [0.677,0.675,0.677,0.677,0.677] +
        [0.694,0.693,0.695,0.696,0.696] +
        [0.705,0.705,0.706,0.707,0.707] +
        [0.712,0.714,0.715,0.716,0.716]
    ),
    'test_loss':(
    [0.988,0.978,1.021,1.053,1.000]+
    [0.709,0.653,0.680,0.715,0.676]+
    [0.578,0.569,0.579,0.609,0.571]+
    [0.532,0.521,0.526,0.544,0.529]+
    [0.502,0.492,0.501,0.508,0.494]
    ),
    'method': ['Only_Tuning'] * 25,
    'percentage': (
         ['5%'] * 5 +
        ['10%'] * 5 +
        ['15%'] * 5 +
        ['20%'] * 5+
        ['25%'] * 5
    )
}

# 转换为数据框
df_Only_tuning= pd.DataFrame(data_Only_tuning)


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# 合并数据集
df_all = pd.concat([df_pretrained, df_Nonpessi_tuning, df_Pessi_tuning, data_CV_Search_tuning, df_Only_tuning,df_Supervised_all])
df_all.to_csv("df_all_summary_DeepFM_1024.csv", index=False)

